---
- name: Create group
  group: 
    name: "{{ item.value.name }}"
    gid: "{{ item.value.gid }}"
    state: present
  with_dict: "{{ group }}"

- name: Create user 
  user:
    uid: "{{ item.value.uid }}"
    name: "{{ item.value.username }}"
    createhome: yes
    home: "{{ item.value.homedir }}"
    comment: "{{ item.value.fullname }}"
    group: "{{ item.value.group }}"
    state: present
  with_dict: "{{ users }}"

- name: Set member of group
  user:
    uid: "{{ item.value.uid }}"
    name: "{{ item.value.username }}"
    groups: "{{ item.value.groupof }}"
    state: present
  with_dict: "{{ users }}"
  when: item.value.groupof is defined

- name: Set password
  user:
    uid: "{{ item.value.uid }}"
    name: "{{ item.value.username }}"
    password: "{{ item.value.pwhash }}"
    state: present
  with_dict: "{{ users }}"
  when: item.value.pwhash is defined
  no_log: True

- name: Set up empty ssh directory
  file:
    path: "{{ item.value.homedir }}"
    mode: 0700
    owner: "{{ item.value.username }}"
    group: "{{ item.value.group }}"
  with_dict: "{{ users }}"
  when: users is defined

- name: Set up authorized_keys for user
  authorized_key:
    user: "{{ item.value.username }}"
    key: "{{ item.value.id_rsa_pub }}"
  with_dict: "{{ users }}"
  when: item.value.id_rsa_pub is defined

- name: set up default private ssh keys
  copy:
    content: "{{ item.value.sshkey }}"
    dest: "{{ item.value.keypath }}"
    mode: 0600
    owner: "{{ item.key }}"
    group: "{{ item.value.group }}"
  with_dict: "{{ private_default_ssh_key }}"
  when: private_default_ssh_key is defined
  no_log: True